/*
 * Copyright 2019 ProximaX
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    // main language plugin
    id 'java-library'
    // distribution of library and dependencies
    id 'java-library-distribution'
    // publishing to maven repository
    id 'maven-publish'
    // sign the artifacts and pom
    id 'signing'
    // code coverage reporting
    id 'jacoco'
    // integrate coverage with github
    id 'com.github.kt3k.coveralls' version '2.8.4'
    // prepare fat jar with all dependencies included
    id "com.github.johnrengelman.shadow" version "5.1.0"
    // generator for the DTOs
    id "org.openapi.generator" version "4.2.2"
}

// define contents of the build
apply from: "$rootDir/gradle/content.gradle"
// load setup for integration tests
apply from: "$rootDir/gradle/integration.gradle"
// load setup for coverage reports
apply from: "$rootDir/gradle/coverage.gradle"
// loak setup for publishing
apply from: "$rootDir/gradle/publishing.gradle"
// load Travis CI specific support
apply from: "$rootDir/gradle/travis.gradle"
// load support for openapi code generator
apply from: "$rootDir/gradle/openapi.gradle"

// Java8
sourceCompatibility = 1.8

// take dependencies from maven central
repositories {
    maven {
    	url 'https://jitpack.io'
    }
    mavenCentral()
    jcenter()
}

// add generated code to the man sources et
sourceSets {
    main {
    	java {
    		srcDirs += [ 'src/gen/java' ]
    	}
    }
}

// testing details
test {
    // use JUnit5
    useJUnitPlatform()
}

// versions of dependencies
ext {
    okHttp3Version = '3.14.7'
    junitVersion = '5.4.2'
}

dependencies {
    // use chain SDK to provide API for key-pair
    api 'io.proximax:java-xpx-chain-sdk:0.6.+'
    // ReactiveX async processing
    api 'io.reactivex.rxjava2:rxjava:2.2.11'
    // libp2p for peer to peer operations
    api 'io.libp2p:jvm-libp2p-minimal:0.1.0-RELEASE'
    
    // support for shamir privacy strategy
    implementation 'com.codahale:shamir:0.6.0'
    
    // validations
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'commons-io:commons-io:2.6'
	implementation 'commons-codec:commons-codec:1.13'
    // OK HTTP3 client
    implementation "com.squareup.okhttp3:okhttp:${okHttp3Version}"
	implementation "com.squareup.okhttp3:logging-interceptor:${okHttp3Version}"
	// JSON serialization/deserialization
	implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'io.swagger:swagger-annotations:1.5.22'

	// mockito for mocking
    testImplementation 'org.mockito:mockito-all:1.9.5'
    // Logging facade
	testImplementation 'org.slf4j:slf4j-api:1.7.26'
	// log implementation
	testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
    // Tests
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.6.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    // tar utility to check content of server responses
    testImplementation 'org.apache.commons:commons-vfs2:2.6.0'
    // without this VFS2 can not open TARs
    testImplementation 'org.apache.commons:commons-compress:1.20'
    
}