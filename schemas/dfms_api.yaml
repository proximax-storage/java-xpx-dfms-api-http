openapi: 3.0.0
servers:
  - url: https://127.0.0.1/api/v1
info:
  description: |
    DFMS node HTTP API.
    [Reference implementation in GO](https://github.com/proximax-storage/go-xpx-dfms-api-http)
    [API definition](https://github.com/proximax-storage/go-xpx-dfms-api)

    API does not tries to follow idiomatic REST or other API patterns for reasons.
  version: "1.0.0"
  title: DFMS API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: ContractClient
    description: Client operations with Drive contracts.
  - name: DriveFS
    description: Remote access to drive disk.
paths:
  /contract/get:
    post:
      tags:
        - ContractClient
      summary: Get Drive contract infromation
      description: Searches for Drive Contract information over the network.
      operationId: getContract
      parameters:
        - $ref: '#/components/parameters/cidParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contractDTO'
        '400':
          $ref: '#/components/responses/errorResp'
  /contract/compose:
    post:
      tags:
      - ContractClient
      summary: Creates new Drive contract
      description: |
        Compose synchronously announces invites to the Network with current node as an
        owner and tries to find members which agrees on specified parameters and options.
        It does not guarantee success on resolving members. On success persists contract
        locally and gives ability to use DriveFS.
      operationId: compose
      parameters:
        - in: query
          name: arg1
          description: |
            Total Drive space in MB. NOTE - Actual parameter name is 'arg'
          required: true
          schema:
            type: integer
            format: uint64
        - in: query
          name: arg2
          description: |
            Total Drive duration in blocks. Avg block time - 15 seconds. NOTE - Actual parameter name is 'arg'
          required: true
          schema:
            type: integer
            format: uint64
        - in: query
          name: replicas
          description: |
            Desired amount of full data replicas for a new Drive. Defaults to 3.
          required: false
          schema:
            type: integer
            format: uint64
        - in: query
          name: min-replicas
          description: |
            Minimum amount of requires full data replicas for a new Drive. Defaults to 3.
          required: false
          schema:
            type: integer
            format: uint64
        - in: query
          name: billing-price
          description: |
            Payment amount for one billing period. Defaults to required space * replicas
          required: false
          schema:
            type: integer
            format: uint64
        - in: query
          name: billing-period
          description: |
            Period of time after which replicators receieve payment. Defaults to 172800 ~ 1 month.
            Example - if duration is one year and billing period is one month, then replicators will receive payouts 12 times every month.
          required: false
          schema:
            type: integer
            format: uint64
        - in: query
          name: percent-approvers
          description: |
            Amount of replicators needed in percents to approve Drive Contract multisignature transactions. Defaults to 66.
          required: false
          schema:
            type: integer
            format: uint64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contractDTO'
        '400':
          $ref: '#/components/responses/errorResp'
  /contract/ls:
    post:
      tags:
      - ContractClient
      summary: List Drive contracts node aware of
      description: |
        Lists all the contracts in which Node participates as an owner or a member
      operationId: ls
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/contractDTO'
        '400':
          $ref: '#/components/responses/errorResp'
  /contract/ammends:
    post:
      tags:
      - ContractClient
      summary: Ammendments subscriptio
      description: |
        Creates subscription for Drive Contract updates/corrections of any contract from the network by ID.
      operationId: ammends
      parameters:
        - $ref: '#/components/parameters/cidParam'
      responses:
        '200':
          description: |
            Establishes persitent connection and sends json value through it to the requester as long as new updates appear.
          headers:
            -X-Stream-Output:
              schema:
                type: integer
                enum:
                 - 1
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/contractDTO'
        '400':
          $ref: '#/components/responses/errorResp'
  /drive/add:
    post:
      tags:
      - DriveFS
      summary: Add file
      description: |
        Sends file or directory to remote node which adds it to the path of the contract
      operationId: driveAdd
      parameters:
        - $ref: '#/components/parameters/cidParam'
        - $ref: '#/components/parameters/dstParam'
        - $ref: '#/components/parameters/flushParam'
      requestBody:
        description: File or directory to be added
        required: true
        content:
           multipart/form-data:
            schema:
              type: string
              format: binary
              description: Multipart might be dynamic and have many subdirectories. Format is taken from [ipfs files](https://github.com/ipfs/go-ipfs-files)
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                 cid:
                  $ref: '#/components/schemas/cidDTO'
        '400':
          $ref: '#/components/responses/errorResp'
  /drive/get:
    post:
      tags:
      - DriveFS
      summary: Get file
      description: |
        Sends file or directory to remote node which adds it to the path of the contract
      operationId: driveGet
      parameters:
        - $ref: '#/components/parameters/cidParam'
        - $ref: '#/components/parameters/srcParam'
        - $ref: '#/components/parameters/flushParam'
      responses:
        '200':
          description: Success
          headers:
            -X-Stream-Output:
                schema:
                  type: integer
                  enum:
                   - 1
          content:
            text/plain:
              schema:
                type: string
                description: Tar encoded file or directory.
                format: tar
        '400':
          $ref: '#/components/responses/errorResp'
  /drive/rm:
    post:
      tags:
      - DriveFS
      summary: Remove file
      description: Remove removes the file or directory from the path
      operationId: driveRm
      parameters:
        - $ref: '#/components/parameters/cidParam'
        - $ref: '#/components/parameters/srcParam'
        - $ref: '#/components/parameters/flushParam'
        - in: query
          name: local
          description: Delete file from local disk only, but keep reference on it remotely
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/components/responses/errorResp'
  /drive/mv:
    post:
      tags:
      - DriveFS
      summary: Move file
      description: |
         Move moves file or directory from the givens source path to the given destination path
         Use also to rename file or directory
      operationId: driveMv
      parameters:
        - $ref: '#/components/parameters/cidParam'
        - $ref: '#/components/parameters/srcParam'
        - $ref: '#/components/parameters/dstParam'
        - $ref: '#/components/parameters/flushParam'
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/components/responses/errorResp'
  /drive/cp:
    post:
      tags:
      - DriveFS
      summary: Copy file
      description: |
         Copy copies file or directory from the givens source path to the given destination path
         It does not makes the full copy of the file or directory, it just copies the reference
      operationId: driveCp
      parameters:
        - $ref: '#/components/parameters/cidParam'
        - $ref: '#/components/parameters/srcParam'
        - $ref: '#/components/parameters/dstParam'
        - $ref: '#/components/parameters/flushParam'
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/components/responses/errorResp'
  /drive/mkdir:
    post:
      tags:
      - DriveFS
      summary: Make directory
      description: MakeDir creates new directory on the given path
      operationId: driveMkdir
      parameters:
        - $ref: '#/components/parameters/cidParam'
        - $ref: '#/components/parameters/srcParam'
        - $ref: '#/components/parameters/flushParam'
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/components/responses/errorResp'
  /drive/ls:
    post:
      tags:
      - DriveFS
      summary: List files
      description: Ls returns information about the files and directories under the given path
      operationId: driveLs
      parameters:
        - $ref: '#/components/parameters/cidParam'
        - $ref: '#/components/parameters/srcParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/statDTO'
        '400':
          $ref: '#/components/responses/errorResp'
  /drive/stat:
    post:
      tags:
      - DriveFS
      summary: File information
      description: Stat returns information about the file or directory under the given path
      operationId: driveStat
      parameters:
        - $ref: '#/components/parameters/cidParam'
        - $ref: '#/components/parameters/srcParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statDTO'
        '400':
          $ref: '#/components/responses/errorResp'
  /drive/flush:
    post:
      tags:
      - DriveFS
      summary: Flush drive
      description: Flush pushes state of the local Drive to all replicators
      operationId: driveFlush
      parameters:
        - $ref: '#/components/parameters/cidParam'
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/components/responses/errorResp'
components:
  responses:
    errorResp:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorDTO'
  parameters:
    cidParam:
      in: query
      name: arg1
      description: |
        [Cid](https://github.com/multiformats/cid) (version 1) - special content identifier. May represents either data or Drive.
      required: true
      schema:
        type: string
    srcParam:
      in: query
      name: arg2
      description: The source path of the file in Drive.
      required: true
      schema:
        type: string
    dstParam:
      in: query
      name: arg3
      description: The destination path.
      required: true
      schema:
        type: string
        default: "/"
    flushParam:
      in: query
      name: flush
      description: To immediately send data to replicators
      schema:
        type: boolean
        default: false
  schemas:
    statDTO:
      type: object
      description: File statistics
      properties:
        name:
          type: string
        size:
          type: integer
          format: uint64
        type:
          type: string
          enum:
            - "file"
            - "dir"
    cidDTO:
      type: string
      description: |
        [Cid](https://github.com/multiformats/cid) (version 1) - special content identifier.
    contractDTO:
      type: object
      properties:
        drive:
          $ref: '#/components/schemas/cidDTO'
        owner:
          type: string
          description: Hex encoded public key.
        replicators:
          type: array
          description: Hex encoded public keys.
          items:
            type: string
        root:
          type: string
        created:
          type: integer
          format: int64
          description: Block height when the Contract was started.
        duration:
          type: integer
          format: int64
        space:
          type: integer
          format: int64
        replicas:
          type: integer
          format: uint16
        percentApprovers:
          type: integer
          format: uint16
        billingPrice:
          type: integer
          format: int64
        billingPeriod:
          type: integer
          format: int
    errorDTO:
      type: object
      properties:
        message:
          type: string
          description: Error message
        code:
          type: integer
          enum:
          - 0
          - 1
          - 2
          description: |
            * 0 - Normal - is a normal error. The command failed for some reason that's not a bug.
            * 1 - Client - means the client made an invalid request.
            * 2 - Implementation - means there's a bug in the implementation.
            * 3 - RateLimited - is returned when the operation has been rate-limited.
            * 4 - Forbidden - is returned when the client doesn't have permission to
                  perform the requested operation.
        type:
          type: string
          enum:
          - "error"