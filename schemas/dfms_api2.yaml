openapi: 3.0.0
servers:
  - url: https://127.0.0.1/api/v1
info:
  description: |
    DFMS node HTTP API.
    [Reference implementation in GO](https://github.com/proximax-storage/go-xpx-dfms-api-http)
    [API definition](https://github.com/proximax-storage/go-xpx-dfms-api)
    
    API does not tries to follow idiomatic REST or other API patterns for reasons. 
  version: "1.0.0"
  title: DFMS API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: ContractClient
    description: Client operations with Drive contracts.
  - name: ContractReplicator
    description: Replicator operations with Drive contracts.
  - name: DriveFS
    description: Remote access to drive.
  - name: Network
    description: Comunication between peers.
  - name: SuperContract
    description: Interaction with SuperContracts on a drive.
paths:
  /contract/get:
    post:
      tags:
        - ContractClient
        - ContractReplicator
      summary: Get Drive contract infromation
      description: Searches for Drive Contract information over the network.
      operationId: getContract
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contract'
        '400': 
          $ref: '#/components/responses/errorResp'
  /contract/compose:
    post:
      tags: 
      - ContractClient
      - ContractReplicator
      summary: Creates new Drive contract
      description: |
        Compose synchronously announces invites to the Network with current node as an 
        owner and tries to find members which agrees on specified parameters and options.
        It does not guarantee success on resolving members. On success persists contract
        locally and gives ability to use DriveFS.
      operationId: compose
      parameters:
        - in: query
          name: arg (space)
          description: | 
            Total Drive space in MB.
          required: true
          example: 1000
          schema:
            type: integer
            format: uint64
        - in: query
          name: arg (duration)
          description: |
            Duration of one Drive subscription (billing) period duration in blocks. Avg block time - 15 seconds. Can be s (second), m (minute), h (hour)
          required: true
          schema:
            type: string
            format: string
          example: 1000h
        - in: query
          name: replicas
          description: |
            Desired amount of full data replicas for a new Drive.
          required: false
          schema:
            type: integer
            format: uint16
            default: 3
        - in: query
          name: min-replicators
          description: |
            Minimum amount of requires full data replicas for a new Drive.
          required: false
          schema:
            type: integer
            format: uint16
            default: 3
        - in: query
          name: subscription-price
          description: |
            Payment amount for one subscription (billing) period.
          required: false
          schema:
            type: integer
            format: int64
            default: space * replicas
        - in: query
          name: number-subscription-periods
          description: |
            Number of subscription periods Period of time after which replicators receieve payment.
            Example - if duration is one year and subscription period is one month, then replicators will receive payouts 12 times every month.
          required: false
          schema:
            type: integer
            format: int64
            default: 518400 blocks = 60 days ~ 3 month
        - in: query
          name: percent-approvers
          description: |
            Amount of replicators needed in percents to approve Drive Contract multisignature transactions.
          required: false
          schema:
            type: integer
            format: uint8
            default: 66
        - in: query
          name: private-key
          description: |
            User can generate own private key and pass it.
          required: false
          schema:
            type: string
            format: PrivKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contract'
        '400': 
          $ref: '#/components/responses/errorResp'
  /contract/ls:
    post:
      tags: 
      - ContractClient
      - ContractReplicator
      summary: List Drive contracts node aware of
      description: |
        Lists all the contracts in which Node participates as an owner or a member
      operationId: ls
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Ids:
                    type: array
                    items:
                      $ref: '#/components/schemas/cid'
        '400': 
          $ref: '#/components/responses/errorResp'
  /contract/ammends:
    post:
      tags:
      - ContractClient
      - ContractReplicator
      summary: Ammendments subscription
      description: |
        Creates subscription for Drive Contract updates/corrections of any contract from the network by ID.
      operationId: ammends
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
      responses:
        '200':
          description: |
            Establishes persitent connection and sends json value through it to the requester as long as new updates appear.
          headers: 
            -X-Stream-Output:
              schema:
                type: integer
                enum:
                 - 1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contract'
        '400': 
          $ref: '#/components/responses/errorResp'
  /contract/verify:
    post:
      tags:
      - ContractClient
      - ContractReplicator
      summary: Contract verify
      description: |
        Initiates verification round between replicators.
      operationId: verify
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
      responses:
        '200':
          description: |
            Start a drive verification
          headers: 
            -X-Stream-Output:
              schema:
                type: integer
                enum:
                 - 1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/verifyResult'
        '400': 
          $ref: '#/components/responses/errorResp'
  /contract/finish:
    post:
      tags:
      - ContractClient
      - ContractReplicator
      summary: Finish contract
      description: |
        Finish contract.
      operationId: finish
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
  /contract/accept:
    post:
      tags:
      - ContractReplicator
      summary: Accept joins contract
      description: |
        Accept joins contract by it's id. Can join only contracts awaiting new members.
      operationId: accept
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
  /contract/accepted:
    post:
      tags:
      - ContractReplicator
      summary: Show accepted contracts
      description: |
        Establishes persitent connection and sends json value through it to the requester as long as new updates appear.
      operationId: accepted
      responses:
        '200':
          description: drive list
          headers: 
            -X-Stream-Output:
              schema:
                type: integer
                enum:
                 - 1
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    Contract:
                      $ref: '#/components/schemas/contract'
        '400': 
          $ref: '#/components/responses/errorResp'
  /contract/invites:
    post:
      tags:
      - ContractReplicator
      summary: Subscribe to new contracts
      description: |
        Creates subscription for new contract invitations. Main use case is to have external contract acceptance logic.
      operationId: invites
      responses:
        '200':
          description: |
            Establishes persitent connection and sends json value through it to the requester as long as new updates appear.
          headers: 
            -X-Stream-Output:
              schema:
                type: integer
                enum:
                 - 1
          content:
            application/json:
              schema:
                type: object
                properties:
                  Invite:
                    $ref: '#/components/schemas/contract'
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/add:
    post:
      tags:
      - DriveFS
      summary: Add a file/directory
      description: |
        Adds to drive a new file/directory and sends it to remote nodes which
      operationId: driveAdd
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/dstParam'
        - $ref: '#/components/parameters/flushParam'
      requestBody:
        description: file/directory to be added
        required: true
        content:
           multipart/form-data:
            schema:
              type: string
              format: binary
              description: Multipart might be dynamic and have many subdirectories. Format is taken from [ipfs files](https://github.com/ipfs/go-ipfs-files)
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                 cid:
                  $ref: '#/components/schemas/cid'
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/get:
    post:
      tags:
      - DriveFS
      summary: Get a file or dir by a path
      description: |
        Return a file/directory from remote nodes or local store by a path
      operationId: driveGet
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/srcParam'
      responses:
        '200':
          description: Success
          headers:
            -X-Stream-Output:
                schema:
                  type: integer
                  enum:
                   - 1
          content:
            text/plain:
              schema:
                type: string
                description: Tar encoded file/directory.
                format: tar
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/file:
    post:
      tags:
      - DriveFS
      summary: Get file by CID
      description: |
        Returns a file from remote nodes or local store by CID
      operationId: driveFile
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/fileCIDParam'
      responses:
        '200':
          description: Success
          headers:
            -X-Stream-Output:
                schema:
                  type: integer
                  enum:
                   - 1
          content:
            text/plain:
              schema:
                type: string
                description: Tar encoded file/directory.
                format: tar
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/rm:
    post:
      tags:
      - DriveFS
      summary: Remove file
      description: Removes a file/directory by a path
      operationId: driveRm
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/srcParam'
        - $ref: '#/components/parameters/flushParam'
        - $ref: '#/components/parameters/localParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/mv:
    post:
      tags:
      - DriveFS
      summary: Move file
      description: |
         Moves a file/directory from a source path to a destination path
         Use also to rename a file/directory
      operationId: driveMv
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/srcParam'
        - $ref: '#/components/parameters/dstParam'
        - $ref: '#/components/parameters/flushParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/cp:
    post:
      tags:
      - DriveFS
      summary: Copy file
      description: |
         Copies a file/directory from a source path to a destination path
         It does not make the full copy of the file/directory, it just copies the reference
      operationId: driveCp
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/srcParam'
        - $ref: '#/components/parameters/dstParam'
        - $ref: '#/components/parameters/flushParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/mkdir:
    post:
      tags:
      - DriveFS
      summary: Make directory
      description: Creates a new directory by a given path
      operationId: driveMkdir
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/srcParam'
        - $ref: '#/components/parameters/flushParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/ls:
    post:
      tags:
      - DriveFS
      summary: List files
      description: Returns information about a file/directory by a given path
      operationId: driveLs
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/srcParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cidList'
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/stat:
    post:
      tags:
      - DriveFS
      summary: File information
      description: Returns information about a file/directory by a given path
      operationId: driveStat
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/srcParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stat'
        '400': 
          $ref: '#/components/responses/errorResp'
  /drive/flush:
    post:
      tags:
      - DriveFS
      summary: Flush drive
      description: Flush pushes state of the local Drive to all replicators
      operationId: driveFlush
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
  /net/connect:
    post:
      tags:
      - Network
      summary: Connect to a node
      description: Connect to a node by it address.
      operationId: connect
      parameters:
        - $ref: '#/components/parameters/addrParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
  /net/disconnect:
    post:
      tags:
      - Network
      summary: Disconnect from a node
      description: Disconnect from a node by its address.
      operationId: disconnect
      parameters:
        - $ref: '#/components/parameters/addrParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
  /net/id:
    post:
      tags:
      - Network
      summary: Get ID
      description: Get ID of a node
      operationId: getid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/id'

        '400': 
          $ref: '#/components/responses/errorResp'
  /net/peers:
    post:
      tags:
      - Network
      summary: Connected peers
      description: Get all connected peers.
      operationId: peers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Peers:
                    type: array
                    items:
                      $ref: '#/components/schemas/peer'
        '400': 
          $ref: '#/components/responses/errorResp'
  /net/addrs:
    post:
      tags:
      - Network
      summary: Node addresses
      description: Get all addresses of a node.
      operationId: addresses
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Addrs:
                    type: array
                    items:
                      $ref: '#/components/schemas/addr'
        '400': 
          $ref: '#/components/responses/errorResp'
  /sc/deploy:
    post:
      tags:
      - SuperContract
      summary: Deploy a SuperContract
      description: Deploy a new SuperContract by a file path. Return the SuperContract ID.
      operationId: deploy
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
        - $ref: '#/components/parameters/srcParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    $ref: '#/components/schemas/cid'
        '400': 
          $ref: '#/components/responses/errorResp'
  /sc/exec:
    post:
      tags:
      - SuperContract
      summary: Execute a SuperContract
      description: Start execution of a SuperContract. Return the Transaction ID.
      operationId: execute
      parameters:
        - $ref: '#/components/parameters/scIdParam'
        - in: query
          name: arg
          schema:
            type: integer
          required: true
          description: A count of gas for execution.
          example: 10000000
        - in: query
          name: arg
          schema:
            type: string
          required: true
          description: Function name.
          example: save
        - in: query
          name: arg
          schema:
            type: array
            items:
              type: string
              example: 43
          required: false
          description: Function parameters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    $ref: '#/components/schemas/cid'
        '400': 
          $ref: '#/components/responses/errorResp'
  /sc/get:
    post:
      tags:
      - SuperContract
      summary: Get a SuperContract
      description: Get a SuperContract by ID.
      operationId: getSC
      parameters:
        - $ref: '#/components/parameters/scIdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  SuperContract:
                    $ref: '#/components/schemas/SuperContract'
        '400': 
          $ref: '#/components/responses/errorResp'
  /sc/ls:
    post:
      tags:
      - SuperContract
      summary: Get SuperContract
      description: Get all SuperContract on a drive.
      operationId: lsSC
      parameters:
        - $ref: '#/components/parameters/driveIdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Ids:
                    type: array
                    items:
                      $ref: '#/components/schemas/cid'
        '400': 
          $ref: '#/components/responses/errorResp'
  /sc/results:
    post:
      tags:
      - SuperContract
      summary: Results of a SuperContract execution
      description: Get results of a SuperContract execution by its TxID.
      operationId: results
      parameters:
        - $ref: '#/components/parameters/txIdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Results:
                    type: array
                    items:
                      type: string
                      example: /SuperContracts/result.txt
        '400': 
          $ref: '#/components/responses/errorResp'
  /sc/executions:
    post:
      tags:
      - SuperContract
      summary: Execution results
      description: Get all execution results started by a node. Returns Transaction IDs.
      operationId: executions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  Ids:
                    type: array
                    items:
                      $ref: '#/components/schemas/cid'
        '400': 
          $ref: '#/components/responses/errorResp'
  /sc/deactivate:
    post:
      tags:
      - SuperContract
      summary: Deactivate a SuperContract
      description: Deactivate a SuperContract by its ID.
      operationId: deactivate
      parameters:
        - $ref: '#/components/parameters/scIdParam'
      responses:
        '200':
          description: Success
        '400': 
          $ref: '#/components/responses/errorResp'
components:
  responses:
    errorResp:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
  parameters:
    driveIdParam:
      in: query
      name: arg
      description: | 
        Drive ID is [Cid](https://github.com/multiformats/cid) (version 1) - special content identifier.
      required: true
      schema:
        type: string
      example: baegaajaiaqjcaqpoddqh7qnejrdnymgerzcrenfpymlzw4pacyju7adxhdsnekp2
    scIdParam:
      in: query
      name: arg
      description: | 
        SuperContract ID is [Cid](https://github.com/multiformats/cid) (version 1) - special content identifier.
      required: true
      schema:
        type: string
      example: baegqajaiaqjcak6kujbwwdsx3ytcv5wvyrf7fwcij7yvb527laruzjgwch5jxqlm
    txIdParam:
      in: query
      name: arg
      description: | 
        Transacrion ID is [Cid](https://github.com/multiformats/cid) (version 1) - special content identifier.
      required: true
      schema:
        type: string
      example: bafybeihnpekq72dk75zpkhlgoh6lsjlxcygu4vrtclaqartyxqqqys5c7m
    fileCIDParam:
      in: query
      name: arg
      description: | 
        [Cid](https://github.com/multiformats/cid) (version 1) of a file on a Drive.
      required: true
      schema:
        type: string
      example: bafybeihwmbino5nj545eir2epawhi4xpjdwlsbcnoi7jio5mn6j6peim5a
    addrParam:
      in: query
      name: arg
      description: | 
        Address of some node.
      required: true
      schema:
        type: string
      example: /ip4/127.0.0.1/tcp/63666/p2p/12D3L7AUwnPXj7odaWGzWcWwWD1mGrB5d5yr6zLrimHcyiZLVWcH
    srcParam:
      in: query
      name: arg
      description: A source path of a file on Drive.
      required: true
      schema:
        type: string
        example: "/example"
    dstParam:
      in: query
      name: arg
      description: A destination path.
      required: true
      schema:
        type: string
        default: "/destination"
    flushParam:
      in: query
      name: flush
      description: To send data to replicators immediately
      schema:
        type: boolean
        default: false
    localParam:
      in: query
      name: local
      description: Delete file from local drive only, but keep a reference on remote one
      schema:
        type: boolean
        default: false
  schemas:
    id:
      type: object
      properties:
        ID: 
          type: string
          example: 12D3L7AUwnPXj7odaWGzWcWwWD1mGrB5d5yr6zLrimHcyiZLVWcH
          description: network ID of a node
    peer:
      type: object
      properties:
        Addrs: 
          type: string
          example: /ip4/127.0.0.1/tcp/63666
          description: address of a node
        ID: 
          type: string
          example: 12D3L7AUwnPXj7odaWGzWcWwWD1mGrB5d5yr6zLrimHcyiZLVWcH
          description: network ID of a node
    addr:
      type: string
      example: /ip4/127.0.0.1/tcp/63666/p2p/12D3L7AUwnPXj7odaWGzWcWwWD1mGrB5d5yr6zLrimHcyiZLVWcH
      description: full address of a node
    stat:
      type: object
      description: File statistics
      properties:
        name:
          type: string
        size:
          type: integer
          format: uint64
        type:
          type: string
          enum:
            - "file"
            - "dir"
        Cid:
          type: object
          properties:
            /:
              $ref: '#/components/schemas/cid'
    cid:
      type: string
      example: baegaajaiaqjcahaxr4ry4styn74ronvr2nvfdmgxtrzyhsci2xqpw5eisrisrgn5
      description: |
        [Cid](https://github.com/multiformats/cid) (version 1) - special content identifier.
    cidList:
      type: array
      items:
        $ref: '#/components/schemas/cid'
    contract:
      type: object
      properties:
        drive:
          $ref: '#/components/schemas/cid'
        owner:
          type: string
          example: 080412200eb448d07c7ccb312989ac27aa052738ff589e2f83973f909b506b450dc5c4e2
          description: Hex encoded public key.
        replicators:
          type: array
          description: Hex encoded public keys.
          items:
            $ref: '#/components/schemas/cid'
            example:
              [
                0804122068f50e10e5b8be2b7e9ddb687a667d6e94dd55fe02b4aed8195f51f9a242558b,
                0804122073472a2e9dcea5c2a36eb7f6a34a634010391ec89e883d67360db16f28b9443c,
                08041220d03918e35573c66578b5a0eed723fe2a46208783e13498751d9315115ca06d4b
              ]
        root:
          $ref: '#/components/schemas/cid'
          example: QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn
        created:
          type: integer
          format: int64
          example: 741
          description: Block height when the Contract was started.
        duration:
          type: integer
          example: 12
          format: int64
        space:
          type: integer
          example: 1000
          format: int64
        replicas:
          type: integer
          example: 5
          format: uint16
        minReplicators:
          type: integer
          example: 3
          format: uint16
        percentApprovers:
          type: integer
          example: 100
          format: uint8
        billingPrice:
          type: integer
          example: 5000
          format: int64
        billingPeriod:
          type: integer
          example: 1
          format: int64
    SuperContract:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/cid'
        drive:
          $ref: '#/components/schemas/contract'
        file:
          $ref: '#/components/schemas/cid'
        vmversion:
          type: integer
          example: 1
        functions:
          type: array
          items:
            type: string
            example: func1
    verifyResult:
      type: object
      properties:
        replicator:
          type: string
          description: Hex encoded public keys.
          example: 0804122068f50e10e5b8be2b7e9ddb687a667d6e94dd55fe02b4aed8195f51f9a242558b
        faultyBlocks:
          type: array
          items:
            $ref: '#/components/parameters/driveIdParam'
    error:
      type: object
      properties:
        message:
          type: string
          description: Error message
        code:
          type: integer
          enum: 
          - 0
          - 1
          - 2
          description: |
            * 0 - Normal - is a normal error. The command failed for some reason that's not a bug.
            * 1 - Client - means the client made an invalid request.
            * 2 - Implementation - means there's a bug in the implementation.
            * 3 - RateLimited - is returned when the operation has been rate-limited.
            * 4 - Forbidden - is returned when the client doesn't have permission to
                  perform the requested operation.
        type:
          type: string
          enum: 
          - "error"